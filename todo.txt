- this causes warning in the c backend
main :: () -> s32 {
	a := "Hello".data;
	return cast(s32)a;
}

- do better errors in parser stage and check for end of stream
- do better errors in semantic stage
- check this code, detecting circular dependency
proc : () -> vec3
{
}
- check things like
a : bool = !a;

- check return in all paths, proc with no return clause and other commands is ignored when returning any non-void
- check for end of stream within comment
- dereference pointer on . operator

- fix detecting circular dependency
a : struct{
	b : ^a;
}


#IDEAS FOR CAST SYNTAX
cast(type, value)
cast(type) value
value as type
value -> type

// when proc returns void this is allowed somehow
b := proc();