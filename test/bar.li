
/*
foo : () -> s32 {
    p := person:{30,123};
    return hello(&p);
}

hello : (f : ^person) -> s32 {
    return f.age;
}

person struct {
    age : s32;
    cpf : s32;
}
*/

/*
foo : () -> s32 {
    p := [1,2,3,4];
    return hello(p);
}

hello : (f : [4]s32) -> s32 {
    return f[1];
}

foo : () -> s32 {
    p : s32 = 5;
    return hello(&p);
}

hello : (f : ^s32) -> s32 {
    return 2 + *f;
}

foo : () -> s32 {
    p := [[1,2,3,4], [4,5,6,7], [8,9,10,11]];
    return hello(p);
}

hello : (f : [3][4]s32) -> s32 {
    return f[2][1];
}

foo : () -> s32 {
    p := person:{31, [1,2,3,4,8,9,10,11]};
    return hello(p);
}

hello : (f : person) -> s32 {
    return (((&f -> ^s32) + 4) -> ^u8)[0] -> s32;
}

person struct {
    age : s32;
    name : [8]u8;
}

foo : () -> s32 {
    p := person:{30, 123};
    b := &p -> ^s32;
    return *(((b -> ^s16) + 2) -> ^s32);
}

person struct {
    age : s32;
    cpf : s32;
}
*/

/*
make_person: () -> person {
    return person:{31, 123};
}

person struct {
    age : s32;
    cpf : s32;
}

foo : () -> s32 {
    age := 31;
    p := person:{age, 123};
    return p.age;
}

person struct {
    age : s32;
    cpf : s32;
}


foo : () -> s32 {
    p := make_person(31, 123);
    return p.cpf + p.age;
    //return make_person(31).cpf;
}

make_person: (a : s32, b : s32) -> person {
    return person:{a, b};
}

person struct {
    age : s32;
    cpf : s32;
}
*/

//#import "base.li"
//#import "../modules/base.li"

/*
MessageBoxA : (hwnd : ^void, text : ^u8, caption : ^u8, type : u32) -> s32 #extern("user32");
main: () -> s32 {
    a : [10]s32;
    i := 0;
    //sum := 0;
    while i < 10 {
        //sum += i;
        i += 1;
        a[i] = 0;
    }

    MessageBoxA(null, "hello\0".data, "world\0".data, 0);
    return 0;
}
*/

/*
MessageBoxA : (hwnd : ^void, text : ^u8, caption : ^u8, type : u32) -> s32 #extern("user32");

main : () -> s32 {
    return #run foo();
}

foo : () -> s32 {
    if MessageBoxA(null, "hello\0".data, "world\0".data, 1) == 2
        return 0;
    else
        return 1;
}
*/

MessageBoxA : (hwnd : ^void, text: ^u8, caption : ^u8, type : u32) -> s32 #extern("User32.dll");

main : () -> s32 {
    a := MessageBoxA;
    return a(null, "hello\0".data, "world\0".data, 0);
    //return 0;
}

foo : () -> s32 {
    return 32;
}