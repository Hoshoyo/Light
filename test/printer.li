/*
main : () -> s32 {
    a := foo:{&[1]};
    return 0;
}

foo struct {
    data : ^[1]s32;   
}
*/
#import "../modules/reflect.li"
#import "../modules/w_print.li"
main : () -> s32 {
    
    return print_test2(1, 2);
}

print_test2:(args : ...) -> s32 {
    a := args -> ^array;
    values := a.data -> ^User_Type_Value;
    count := a.length;

    sum : s32 = 0;
    for i :u64= 0; i < count; i += 1 {
        value := values[i];
        s := value.value;
        print_u64(s -> u64, 16);
        print_string("\n");
    }
    return sum;
    /*
    a := args -> ^array;
    count := a.length;
    type_info := a.type_info;
    
    //
    values := a.data -> ^User_Type_Value;
    for i :u64= 0; i < count; i += 1 {
        value := values[i];
        print_type(value.type);
        print_string("\n");
    }
    */
}