foo : () -> s32 {
    if 5 > 3 {
        if 3 == 3 && 5 > 2 {
            a := 32;
            return a;
        }
    }
    return 0;

    //if ((5 == 5) && true) && (false && (4 > 3))
    //if (true && true) && (true && (false || true))
    //    return 5;
    //else
    //    return 6;

    //a : [2]bar;
    //a[1].a = 3;
    //a[0].b = 5;
    //return a[1].a + a[0].b;

    //a : bar;
    //b : ^bar;
    //a.b = 4;
    //b = &a;
    //return b.b;

    //b : bar;
    //b.b = 3.14;
    //b.a = 4;
    //return b.b;

    //f := 4.32;
    //g : ^r32 = &f;
    //return g[0];

    //j : [4][2]r32;
    //j[1][0] = 3.5;
    //j[1][1] = 4.2;
    //return j[1][0];
}

bar struct {
    a : s32;
    b : s32;
}

fooz : () -> s32 {
    a := bar(2);
    return a;
}

bar : (b : s32) -> s32 {
    a : s32 = 32;
    return a * b;
}

// ---

foo : () -> s32 {
    return factorial(5);
}

factorial : (value : s32) -> s32 {
    if value == 1 
        return 1;
    return value * factorial(value-1);
}

/*
factorial : (value : s32) -> s32 {
    a := 1;
    b := 1;
    while a <= value {
        b *= a;
        a += 1;
    } 
    return b;
}
*/

// bug

foo : () -> s32 {
    return factorial(5);
}

factorial : (value : s32) -> s32 {
    //a := 1;
    b := 1;
    ///*
    for { a := 1 } ; a <= value ; {} {
        b *= a;
        a += 1;
    }
    //*/
    /*
    while a <= value {
        b *= a;
        a += 1;
    } */
    return b;
}

foo : () -> s32 {
    return factorial(5);
}

factorial : (value : s32) -> s32 {
    b := 1;
    for a := 1; a <= value ; a += 1 {
        b *= a;
    }
    return b;
}