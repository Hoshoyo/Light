#foreign("GL")

glEnable :: (cap : u32) -> void;
glClear :: (mask : u32) -> void;
glClearColor :: (r : r32, g : r32, b : r32, a : r32) -> void;
glViewport :: (x : s32, y : s32, width : s32, height : s32) -> void;

glMatrixMode :: (mode : u32) -> void;
glLoadIdentity :: () -> void;
glBegin :: (mode : u32) -> void;
glColor3f :: (r : r32, g : r32, b : r32) -> void;
glVertex3f :: (x : r32, y : r32, z : r32) -> void;
glEnd :: () -> void;

GL_DEPTH_TEST : u32 : 0x0B71;
GL_DEPTH_BUFFER_BIT : u32 : 0x00000100;
GL_COLOR_BUFFER_BIT : u32 : 0x00004000;
GL_PROJECTION : u32 : 0x1701;

GL_MATRIX_MODE : u32 : 0x0BA0;
GL_MODELVIEW : u32 : 0x1700;
GL_TEXTURE : u32 : 0x1702;

GL_POINTS         : u32 : 0x0000;
GL_LINES          : u32 : 0x0001;
GL_LINE_LOOP      : u32 : 0x0002;
GL_LINE_STRIP     : u32 : 0x0003;
GL_TRIANGLES      : u32 : 0x0004;
GL_TRIANGLE_STRIP : u32 : 0x0005;
GL_TRIANGLE_FAN   : u32 : 0x0006;
GL_QUADS : u32    : 0x0007;
GL_QUAD_STRIP     : u32 : 0x0008;
GL_POLYGON        : u32 : 0x0009;

// Glx Linux specific

GLX_X_RENDERABLE : u32 : 0x8012;
GLX_DRAWABLE_TYPE : u32 : 0x8010;
GLX_RENDER_TYPE : u32 : 0x8011;
GLX_RGBA_BIT : u32 : 0x1;
GLX_X_VISUAL_TYPE : u32 : 0x22;
GLX_TRUE_COLOR : u32 : 0x8002;
GLX_RED_SIZE : u32 : 8;
GLX_GREEN_SIZE : u32 : 9;
GLX_BLUE_SIZE : u32 : 10;
GLX_ALPHA_SIZE : u32 : 11;
GLX_DEPTH_SIZE : u32 : 12;
GLX_STENCIL_SIZE : u32 : 13;
GLX_DOUBLEBUFFER : u32 : 5;
GLX_WINDOW_BIT : u32 : 1;
GLX_SAMPLE_BUFFERS : s32 : 100000;
GLX_SAMPLES : s32 : 100001;
True : u32 : 1;

GLX_CONTEXT_MAJOR_VERSION_ARB : s32 : 0x2091;
GLX_CONTEXT_MINOR_VERSION_ARB : s32 : 0x2092;
GLX_CONTEXT_FLAGS_ARB : s32 : 0x2094;
GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB : s32 : 0x00000002;

glXChooseFBConfig :: (dpy : ^Display, screen : s32, attrib_list : ^u32, nelements : ^s32) -> ^GLXFBConfig;
glXGetVisualFromFBConfig :: (dpy : ^Display, config : GLXFBConfig) -> ^XVisualInfo;
glXGetFBConfigAttrib :: (dpy : ^Display, config : GLXFBConfig, attribute : s32, value : ^s32) -> s32;
glXGetProcAddressARB :: (name : ^u8) -> ^void;
glXIsDirect :: (display : ^Display, ctx : GLXContext) -> bool;
glXQueryVersion :: (dpy : ^Display, major : ^s32, minor : ^s32) -> bool;

#end