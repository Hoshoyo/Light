#import "linux/print.li"

quicksort :: (values : ^s32, start : s64, end : s64) {
	i := start;
	j := end - 1;
	pivo := values[(start + end) / 2];
	
	aux : s32;
	
	while i <= j {
		while values[i] < pivo && i < end {
			i += 1;
		}
		while values[j] > pivo && j > start {
			j -= 1;
		}
		if i <= j {
			aux = values[i];
			values[i] = values[j];
			values[j] = aux;
			i += 1;
			j -= 1;
		}
	}
	if j > start
		quicksort(values, start, j + 1);
	if i < end
		quicksort(values, i, end);

}

print_array :: (values : ^s32, length : s64) {
	for i := 0; i < length; i += 1 {
		print_s64([s64]values[i]);
	}
}

main :: () -> s32 {

	arr : [10]s32 = array {5, 8, 1, 2, 7, 3, 6, 9, 4, 10};
	
	print_array([^s32]arr, 10);
	
	quicksort([^s32]arr, 0, 10);
	print_string("\n");
	
	print_array([^s32]arr, 10);
	
	return 0;
}