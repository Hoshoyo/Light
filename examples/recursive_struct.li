print_s32 :: (value : s32) -> s64 #foreign("print_string.obj");
println :: () -> void #foreign("print_string.obj");

List :: struct {
    elem : s32;
    next : ^List;
}

print_list :: (root : ^List) {
    aux := root;
    for aux != cast(^List)0 {
        print_s32((*aux).elem);
        println();
        aux = (*aux).next;
    }
}

main :: () -> s32{
    l1 : List;
    l2 : List;
    l3 : List;

    l1.elem = 1;
    l2.elem = 2;
    l3.elem = 3;

    l1.next = &l2;
    l2.next = &l3;
    l3.next = cast(^List)0;

    print_list(&l1);

    return 0;
}