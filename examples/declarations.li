// External C, system calls
// Name :: (<args>) -> return_type #foreign(library_name);
ExitProcess  :: (exit_code : s32) -> s32 #foreign("kernel32");
MessageBoxA  :: (hwnd : ^void, lptext : ^s8, lpcaption : ^s8, utype : u32) -> s32 #foreign("user32");
GetStdHandle :: (n_std_handle : u32) -> ^void #foreign("kernel32");
WriteConsole :: (console_output : ^void, buffer : ^s8, num_bytes_to_write : s64, num_bytes_written : ^u32, reserved : ^void) -> s32 #foreign("kernel32");


main :: () -> s32
{
	STD_OUTPUT_HANDLE : u32 : -11;
		
	buffer := "Hello\0";
	written : u32;
	
	stdouthandle := GetStdHandle(STD_OUTPUT_HANDLE);
	res := WriteConsole(stdouthandle, buffer.data, buffer.length, &written, 0);

	return 0;
}