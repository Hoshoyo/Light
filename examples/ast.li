Type_Kind : u32 : enum {
	UNKNOWN      : 0,
	PRIMITIVE    : 1,
	POINTER      : 2,
	STRUCT       : 3,
	UNION        : 4,
	ARRAY        : 5,
	FUNCTION     : 6,
	ALIAS        : 7
}

Type_Primitive : u32 : enum {
	UNKNOWN : 0,
	S8   : 1,
	S16  : 2,
	S32  : 3,
	S64  : 4,
	U8   : 5,
	U16  : 6,
	U32  : 7,
	U64  : 8,
	R32  : 9,
	R64  : 10,
	BOOL : 11,
	VOID : 12
}

Type_Array :: struct {
	array_of  : ^Type_Info;
	dimension : u64;
}

Type_Union :: struct {
	name         : string;
	fields_types : ^^Type_Info;
	fields_names : ^string;
	fields_count : s32;
	alignment    : s32;
}


Type_Struct :: struct {
	name         : string;
	fields_types : ^^Type_Info;
	fields_names : ^string;
	fields_offsets_bits : ^s64;
	fields_count : s32;
	alignment    : s32;
}

Type_Function :: struct {
	return_type     : ^Type_Info;
	arguments_type  : ^^Type_Info;
	arguments_name  : ^string;
	arguments_count : s32;
}

Type_Desc :: union {
    primitive     : Type_Primitive;
    pointer_to    : ^Type_Info;
    array_desc    : Type_Array;
    struct_desc   : Type_Struct;
    union_desc    : Type_Union;
    function_desc : Type_Function;
}

Type_Info :: struct {
	kind       : Type_Kind;
	flags      : u32;
	size_bytes : s64;
    info       : Type_Desc;
}