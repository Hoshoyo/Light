#import "linux/print.li"
//#import "windows/print.li"

foo :: struct {
	s : s32;
	y : s32;
}

Bitmap_Header :: union {
	magic      : [2]u8;
	size_bytes : u32;
	reserved1  : u16;
	reserved2  : u16;
	offset_img : u32;
	f : foo;
}

print_union :: (b : Bitmap_Header) {
	print_s32([s32]b.size_bytes);
}

vec3_rgb :: struct {
	r : r32;
	g : r32;
	b : r32;
}
vec3_xyz :: struct {
	x : r32;
	y : r32;
	z : r32;
}

vec3 :: union {
	color : vec3_rgb;
	coord : vec3_xyz;
}

print_vec3 :: (v : vec3) {
	print_r32(v.coord.x);
	print_string(", ");
	print_r32(v.coord.y);
	print_string(", ");
	print_r32(v.coord.z);
}

float_int :: union {
	f : r32;
	i : s32;
}

main :: () -> s32 {
	// Test1 creating and passing
	bmp : Bitmap_Header;
	bmp.magic[0] = 'B';
	bmp.magic[1] = 'M';
	bmp2 : Bitmap_Header;
	bmp2 = bmp;

	print_union(bmp2);
	print_string("\n");

	// Test2 share memory
	color : vec3;
	color.color.r = 2.0;
	color.color.g = 3.0;
	color.color.b = 4.0;
	print_vec3(color);
	print_string("\n");

	// Convert float to int
	u : float_int;
	u.f = 2.0;
	print_s32(u.i);
	print_string("\n");
	return 0;
}