Display :: struct {
	//XExtData *ext_data;	/* hook for extension to hang data */
	//struct _XPrivate *private1;
	fd                  : s32;			/* Network socket. */
	private2            : s32;
	proto_major_version : s32;/* major version of server's X protocol */
	proto_minor_version : s32;/* minor version of servers X protocol */
	vendor              : ^s8;		/* vendor of the server hardware */
    private3            : u64; //XID private3;
	private4            : u64; //XID private4;
	private5            : u64; //XID private5;
	private6            : s32;
    resource_alloc      : (^void) ->u64;
	byte_order          : s32;		/* screen byte order, LSBFirst, MSBFirst */
	bitmap_unit         : s32;	/* padding and data requirements */
	bitmap_pad          : s32;		/* padding requirements on bitmaps */
	bitmap_bit_order    : s32;	/* LeastSignificant or MostSignificant */
	nformats            : s32;		/* number of pixmap formats in list */
	//ScreenFormat *pixmap_format;	/* pixmap format list */
	private8            : s32;
	release             : s32;		/* release of the server */
	//struct _XPrivate *private9, *private10;
	qlen                : s32;		/* Length of input event queue */
	last_request_read   : u64; /* seq number of last event read */
	request             : u64;	/* sequence number of last request. */
	private11           : ^s8; // XPointer private11;
	private12           : ^s8; // XPointer private12;
	private13           : ^s8; // XPointer private13;
	private14           : ^s8; // XPointer private14;
	max_request_size    : u32; /* maximum number 32 bit words in request*/
	//struct _XrmHashBucketRec *db;
    private15           : (^void) -> s32;
	display_name        : ^s8;	/* "host:display" string used on this connect*/
	default_screen      : s32;	/* default screen for operations */
	nscreens            : s32;		/* number of screens on this server*/
	//Screen *screens;	/* pointer to list of screens */
	motion_buffer       : u64;	/* size of motion buffer */
	private16           : u64;
	min_keycode         : s32;	/* minimum defined keycode */
	max_keycode         : s32;	/* maximum defined keycode */
	private17           : ^s8; //XPointer private17;
	private18           : ^s8; //XPointer private18;
	private19           : s32;
	xdefaults           : ^s8;	/* contents of defaults from server */
	/* there is more to this structure, but it is private to Xlib */
}

XOpenDisplay :: (v : ^s8) -> ^Display #foreign("GL");

main :: () -> s32{
	a : Display;
    return 0;
}