//#import "linux/print.li"

vec2 :: struct {
    x : r32;
    y : r32;
}

vec3 :: struct {
    x : r32;
    y : r32;
    z : r32;
}

vec4 :: struct {
    x : r32;
    y : r32;
    z : r32;
    w : r32;
}

Vertex_3D :: struct {
	position           : vec3;
	texture_alpha      : r32;
	texture_coordinate : vec2;
	color              : vec4;
	mask               : r32;
}

Quad_2D :: struct {
	vertices : [4]Vertex_3D;
}

//quad_new :: (position : vec2, width : r32, height : r32, color : vec4) -> Quad_2D {}
//foo :: (color : vec4) -> Quad_2D {}
//test :: (f : ^u8) -> s32{}

main :: () -> s32 {
	//a := foo(vec4:{1.0, 1.0, 1.0, 1.0});
	//foo(vec4:{1.0, 1.0, 1.0, 1.0});
	
	//quad : Quad_2D;
	//quad = quad_new(vec2:{0.0, 0.0}, 100.0, 100.0, vec4:{1.0, 0.0, 0.0, 1.0});

	//a := test("hello".data);

	q := Quad_2D:{
		array {
			Vertex_3D:{ vec3:{1.0, 1.0, 0.0}, 1.0, vec2:{0.0, 0.0}, vec4:{1.0, 0.0, 0.0, 1.0}, 1.0 },
			Vertex_3D:{ vec3:{1.0, 1.0, 0.0}, 1.0, vec2:{1.0, 0.0}, vec4:{1.0, 0.0, 0.0, 1.0}, 1.0 },
			Vertex_3D:{ vec3:{1.0, 1.0, 0.0}, 1.0, vec2:{0.0, 1.0}, vec4:{1.0, 0.0, 0.0, 1.0}, 1.0 },
			Vertex_3D:{ vec3:{1.0, 1.0, 0.0}, 1.0, vec2:{1.0, 1.0}, vec4:{1.0, 0.0, 0.0, 1.0}, 1.0 }
		}
	};

	return 0;
}