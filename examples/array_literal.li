print_s64 :: (value : s64) -> s64 #foreign("print_string.obj");
print_s32 :: (value : s32) -> s64 #foreign("print_string.obj");
print_r32 :: (value : r32) -> s64 #foreign("print_string.obj");
print_r64 :: (value : r64) -> s64 #foreign("print_string.obj");
println :: () -> s64 #foreign("print_string.obj");
print_string :: (length : s64, str : ^u8) -> s64 #foreign("print_string.obj");

//a : [4]s32 = array {1, 2, 3, 4};

arr :: struct {
	a : [4]s32;
}

vec2 :: struct {
	x : r32;
	y : r32;
}

main :: () -> s32 {
	//a : [4]s32 = array {1, 2, 3, 4};
	//b := arr{array {1, 2, 3, 4}};
	//print_s32(b.a[2]);

	a : /*[3]vec2*/ = array {vec2{1.0, 2.0}, vec2{3.0, 4.0}};

	print_r32(a[1].x);
	
	return 0;
}